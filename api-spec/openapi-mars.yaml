openapi: 3.0.3
info:
  title: 'Mars Concept Title - Mars-11'
  description: 'Description of the Mars API - Mars-11'
  version: 0.0.1
servers:
  - url: https://project-ii.ti.howest.be/mars-11
    description: 'Public API'
  - url: http://localhost:8080/api
    description: 'Local API'

tags:
  - name: Incidents
    description: Retrieve and create incidents.
  - name: Users
    description: Retrieve user information.

paths:
  /incidents:
    get:
      description: Retrieve all incidents
      summary: Retrieve all incidents
      operationId: getIncidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'

    post:
      description: Create a incident
      summary: Create a incident
      operationId: Create an incident
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      responses:
        '201':
          description: Created a incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

  /incidents/{id}:
    get:
      description: Retrieve one incident
      summary: Retrieve one incidents
      operationId: getIncident
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

  /incidents/sol:
    get:
      description: Retrieve all incidents within a sol
      summary: Retrieve all incidents within a sol
      operationId: getIncidentOneSol
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents
  
  /incidents/year:
    get:
      description: Retrieve all incidents within a year
      summary: Retrieve all incidents within a year
      operationId: getIncidentOneYear
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

  /users:
    get:
      description: Retrieve all users 
      summary: Retrieve all users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSet'
    post:
      description: Create a user
      summary: Create a user
      operationId: CreateUser
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users

  /users/{id}:
    get:
      description: Retrieve one user 
      summary: Retrieve one user
      operationId: getAllUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users

  /users/{id}/incidents:
    get:
      description: Retrieve from one user all incidents.
      summary: Retrieve from one user all incidents.
      operationId: getAllIncidentsFromOneUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users
  
  /users/{id}/incidents/{incidentId}:
    get:
      description: Retrieve from one user one incidents.
      summary: Retrieve from one user one incidents.
      operationId: getOneIncidentsFromOneUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: path
          name: incidentId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Users
  
  /users/{id}/incidents/helped:
    get:
      description: Retrieve from one user all incidents where a user has helped.
      summary: Retrieve from one user all incidents where a user has helped.
      operationId: getAllHelpedIncidentsFromOneUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users

  /users/{id}/incidents/sol:
    get:
      description: Retrieve from one user all incidents within a sol.
      summary: Retrieve from one user all incidents within a sol.
      operationId: getAllIncidentsFromOneUserWithinOneSol
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users
  
  /users/{id}/incidents/year:
    get:
      description: Retrieve from one user all incidents within a year.
      summary: Retrieve from one user all incidents within a year.
      operationId: getAllIncidentsFromOneUserWithinOneYear
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users

  /quotes:
    post:
      description: Create a nice quote
      operationId: createQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote:
                  type: string
              required:
                - quote
            examples:
              the-future:
                value:
                  quote: The future depends on what you do today.
                description: You can't argue with the wise guy Mahatma Gandhi, can you?
          text/plain:
            schema:
              type: string
              example: "If everybody minded their own business, the world would go around a great deal faster than it does."
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote'

  /quotes/{quoteId}:
    get:
      description: Get a nice quote
      operationId: getQuote
      parameters:
        - in: path
          name: quoteId
          required: true
          schema:
            type: integer
          description: The quote id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote'
              examples:
                two infinite things:
                  value:
                    value: "Two things are infinite: the universe and human stupidity; and I'm not sure about the universe."
                    id: 21
                  description: Albert Einstein at his best :)
                finding magic:
                  value:
                    value: "Those who don't believe in magic will never find it."
                    id: 34
                  description: Who doesn't love Roald Dahl?
    put:
      description: Update nice quote
      operationId: updateQuote
      parameters:
        - in: path
          name: quoteId
          required: true
          schema:
            type: integer
          description: The quote ID
          example: 42
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote:
                  type: string
              required:
                - quote
            examples:
              dragons exist:
                value:
                  quote: "Fairy tales are more than true: not because they tell us that dragons exist, but because they tell us that dragons can be beaten."
                description: Neil Gaiman, from the book Coraline
              mistakes do something:
                value:
                  quote: "I hope that in this year to come, you make mistakes. Because if you are making mistakes... you're Doing Something."
                description: Neil Gaiman is a genius.
      responses:
        '200':
          description: Created
    delete:
      description: Delete nice quote
      operationId: deleteQuote
      parameters:
        - in: path
          name: quoteId
          required: true
          schema:
            type: integer
          description: The quote Id
          example: 55
      responses:
        '200':
          description: Deleted

components:
  schemas:
    quote:
      type: object
      properties:
        value:
          type: string
          x-faker: lorem.sentence
          example: "Life is a disease: sexually transmitted, and invariably fatal."
        id:
          type: integer
          minimum: 1
          example: 8
      required:
        - value
        - id
      example:
        value: See, the problem is that God gives men a brain and a penis, and only enough blood to run one at a time.
        id: 89

    Incident:
      type: object
      required:
      - id
      - label
      - type
      - victim
      - aggressor
      - longitude
      - latitude
      - time
      - validity
      properties:
        id:
          type: integer
          format: i32
          example: 4
        labels:
          type: array
          example: ["lethal weapon", "critical condition", "child endangerment"]
        type:
          type: string
          example: "Assault"
        reporterId:
          type: integer
          format: i32
          example: 5
        aggressorId:
          type: integer
          format: i32
          example: 13
        latitude:
          type: string
          example: "51.191624"
        longitude:
          type: string
          example: "3.214377"
        time:
          type: string
          format: date-time
          example: "2022-11-07T11:43:59.405931"
        validity:
          type: boolean
          example: true

    User:
      type: object
      required:
       - id
       - firstname
       - lastname
       - subscribed
      properties:
        id:
          type: integer
          format: i32
          example: 2
        firstname:
          type: string
          example: "Kevin"
        lastname:
          type: string
          example: "Gates"
        subscribed:
          type: boolean
          example: true
    
    IncidentSet:
      type: array
      items:
        $ref: '#/components/schemas/Incident'
    
    UserSet:
      type: array
      items:
        $ref: '#/components/schemas/User'
