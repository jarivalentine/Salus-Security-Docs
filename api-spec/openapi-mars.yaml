openapi: 3.0.3
info:
  title: 'Salus Security'
  description: 'Salus Security is a company that focuses on the security of Mars-citizens. With our application we want to help the community on Mars keep themselves but more importantly each other safe. We will be achieving this in a world without law-enforcements.'
  version: 0.1.8
servers:
  - url: https://project-ii.ti.howest.be/mars-11
    description: 'Public API'
  - url: http://localhost:8080/
    description: 'Local API'

tags:
  - name: Incidents
    description: Retrieve and create incidents.
  - name: Users
    description: Retrieve user information.
  - name: Notifications
    description: Endpoints for push notifications
  - name: Partners
    description: Endpoints for partner (Martian)
  - name: Not implemented
    description: Endpoints outside of our POC

paths:

  /api/incidents:
    get:
      description: Retrieve all incidents.
      summary: Retrieve all incidents.
      operationId: getIncidents
      parameters:
        - in: query
          name: active
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
          - Incidents

    post:
      description: Create an incident.
      summary: Create an incident.
      operationId: createIncident
      requestBody:
        required: true
        content:
          application/json:
              schema:
                  type: object
                  required:
                  - reporterId
                  - latitude
                  - longitude
                  properties:
                    reporterId:
                      type: string
                      example: "1989-01-28_AL"
                    latitude:
                      type: string
                      example: "51.191624"
                    longitude:
                      type: string
                      example: "3.214377"
      responses:
        '201':
          description: Created a incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

  /api/incidents/{incidentId}:
    get:
      description: Retrieve one incident.
      summary: Retrieve one incidents.
      operationId: getIncident
      parameters:
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

    delete:
      description: Delete one incident
      summary: Delete one incidents.
      operationId: deleteIncident
      parameters:
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true
      responses:
          '200':
              description: Incident deleted
      tags:
        - Incidents

  /api/incidents/{incidentId}/bystanders:
    get:
      description: Retrieve all bystanders from one incident.
      summary: Retrieve all bystanders from one incidents.
      operationId: getBystandersByIncidentId
      parameters:
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSet'
      tags:
        - Incidents

  /api/incidents/{incidentId}/aggressors:
    get:
      description: Retrieve all aggressors from one incident.
      summary: Retrieve all aggressors from one incidents.
      operationId: getAggressorsByIncidentId
      parameters:
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSet'
      tags:
        - Incidents
  
  /api/incidents/{incidentId}/validate/{id}:
    put:
      description: AI will validate the incident and change the 'ACTIVE' to either 'CONFIRMED' or 'DECLINED'.
      summary: Validate incident by changing the 'state' field.
      operationId: validateIncident
      parameters:
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Incidents

  /api/users:
    get:
      description: Retrieve all users.
      summary: Retrieve all users.
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSet'
      tags:
        - Users

  /api/users/{id}:
    get:
      description: Retrieve one user.
      summary: Retrieve one user.
      operationId: getUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users

  /api/users/{id}/incidents:
    get:
      description: Retrieve from one user all incidents.
      summary: Retrieve from one user all incidents.
      operationId: getAllIncidentsByUserId
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users
  
  /api/users/{id}/incidents/helped:
    get:
      description: Retrieve from one user all incidents where a user has helped.
      summary: Retrieve from one user all incidents where a user has helped.
      operationId: getAllHelpedIncidentsByUserId
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSet'
      tags:
        - Users

  /api/users/{id}/incidents/{incidentId}/help:
    post:
      description: Help a user during a specific incident.
      summary: Help a user during a specific incident.
      operationId: helpUserByIdByIncidentId
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: path
          name: incidentId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      tags:
        - Users

  /api/users/{id}/subscribe:
    put:
      description: Subscribe user to Salus Security Premium.
      summary: Subscribe user to Salus Security Premium.
      operationId: subscribeUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users
    
  /api/users/{id}/unsubscribe:
    put:
      description: Unsubscribe user to Salus Security Premium.
      summary: Unsubscribe user to Salus Security Premium.
      operationId: unSubscribeUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      tags:
        - Users
  
  /api/subscribe:
    post:
      description: subscribe to push notifications
      operationId: postSubscription
      tags: 
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint:
                  type: string
                key:
                  type: string
                auth:
                  type: string
      responses:
        '200':
          description: OK
        '401':
          description: Error

  /api/users/{id}/validate/{type}:
    get:
      description: Check if the type of incident is rightly connected with the user.
      summary: Check if the type of incident is rightly connected with the user.
      operationId: validateUser
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: path
          name: type
          schema:
            type: string
          required: true
      responses:
          '200':
              description: user validated
      tags:
        - Partners

  /api/users/{userId}/doors:
    get:
      description: Retrieve all doors from one user.
      summary: Retrieve all doors from one user.
      operationId: getDoorsByUserId
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoorSet'
      tags:
        - Not implemented
  
  /api/users/{userId}/doors/{doorId}/lock:
    put:
      description: Lock one door using doorId of a specific user using userId.
      summary: Lock one door using doorId of a specific user using userId.
      operationId: lockDoor
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: doorId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Door'
      tags:
        - Not implemented
        
  /api/users/{userId}/doors/{doorId}/unlock:
    put:
      description: Unlock one door using doorId of a specific user using userId.
      summary: Unlock one door using doorId of a specific user using userId.
      operationId: unLockDoor
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: doorId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Door'
      tags:
        - Not implemented
        
  /api/users/{userId}/doors/add:
    post:
      description: Add one door to the list of doors.
      summary: Add one door to the list of doors.
      operationId: addDoor
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Door'
      tags:
        - Not implemented
        
  /api/users/{userId}/doors/{doorId}/remove:
    delete:
      description: Remove one door from the list of doors.
      summary: Remove one door from the list of doors.
      operationId: removeDoor
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
        - in: path
          name: doorId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Door'
      tags:
        - Not implemented

components:
  schemas:
    Incident:
      type: object
      required:
      - id
      - type
      - datetime
      - longitude
      - latitude
      - state
      - labels
      - reporterId
      properties:
        id:
          type: integer
          example: 4
        type:
          type: string
          example: "Assault"
        datetime:
          type: string
          format: date-time
          example: "2022-11-07T11:43:59.405931"
        longitude:
          type: string
          example: "3.214377"
        latitude:
          type: string
          example: "51.191624"
        state:
          type: string
          enum: ["ACTIVE", "CONFIRMED", "DECLINED"]
          example: "CONFIRMED"
        labels:
          type: array
          items:
            oneOf:
              - type: string
          example: ["Armed", "Child Danger", "Critical Condition", "Under Control"]
        reporterId:
          type: string
          example: "1989-01-28_AL"

    User:
      type: object
      required:
       - id
       - firstname
       - lastname
       - subscribed
      properties:
        id:
          type: string
          example: "1989-01-28_AL"
        firstname:
          type: string
          example: "Adison"
        lastname:
          type: string
          example: "Lopez"
        subscribed:
          type: boolean
          example: true
          
    Door:
      type: object
      required:
       - id
       - locked
      properties:
        id:
          type: integer
          example: 5
        locked:
          type: boolean
          example: true
    
    
    IncidentSet:
      type: array
      items:
        $ref: '#/components/schemas/Incident'
    
    UserSet:
      type: array
      items:
        $ref: '#/components/schemas/User'
    
    DoorSet:
      type: array
      items:
        $ref: '#/components/schemas/Door'
